:root {
	--colour-light : #f9f9f9;
	--colour-light-2 : #eeeeee;
	--colour-dark : #292929;
	--colour-dark-2 : #1f1f1f;
	--colour-accent : #6082b6;
	--colour-accent-strawberry : #ff43a4;
	--colour-accent-gold : coral;
	--font-prop : 'Open Sans', Arial, sans-serif;
	--font-mono : Consolas, monospace;
	--margin-left : 20%;
	--margin-right : var(--margin-left);
	--background : var(--colour-light);
	--foreground : var(--colour-dark);
	--background-2 : var(--colour-light-2);
	--foreground-2 : var(--colour-dark-2);
	--avatar-image-opacity : 100%;
}

/* @media (prefers-color-scheme: dark) */
:root.dark-mode {
	--colour-light : #f9f9f9b3;
	--colour-light-2 : #eeeeeeb3;
	--background : var(--colour-dark);
	--foreground : var(--colour-light);
	--background-2 : var(--colour-dark-2);
	--foreground-2 : var(--colour-light-2);
	--avatar-image-opacity : 70%;
}

:root[debug=enable] * {
	outline : 1px dashed var(--colour-accent-strawberry);
}

::-webkit-scrollbar {
	width : 10px;
}

::-webkit-scrollbar-track {
	background : var(--background);
}

::-webkit-scrollbar-thumb {
	background : var(--colour-accent);
	border-radius : 20px;
	border : 3px solid var(--background);
}

::-webkit-scrollbar-thumb:hover {
  background : var(--colour-accent-strawberry);
}

@-moz-document url-prefix() {
	* {
		scrollbar-color : var(--colour-accent) var(--background);
		scrollbar-width : thin;
	}
}

* {
	color : var(--foreground);
	font-family : var(--font-prop);
}

html, body {
	margin : 0px;
	padding : 0px;
}

body {
	background-color : var(--background);
}

hr {
	border-width : 0;
	border-style : none;
	border-bottom-width : thin;
	border-bottom-style : solid;
	border-image-slice : 1;
	border-image-source : linear-gradient(to right, var(--background), var(--background), var(--foreground), var(--background), var(--background));
}

button.unstyled {
	border : none;
	padding : 0;
	background : none;
}

.anim-tilt {
	--duration : 0.4s;
	--angle : 2deg;
	transition : transform var(--duration);
}

.anim-tilt:hover {
	transform : rotate(var(--angle));
}

.anim-wobble {
	--duration : 0.25s;
	--angle : 0.5deg;
}

@keyframes keyframes-fade {
	from {
		background-color : var(--colour-accent-strawberry);
	}
}

:target {
	animation : keyframes-fade 0.5s;
}

@keyframes keyframes-wobble {
	0% {
		transform : rotate(0deg);
	}
	25% {
		transform : rotate(calc(-1 * var(--angle)));
	}
	75% {
		transform : rotate(var(--angle));
	}
	100% {
		transform : rotate(0deg);
	}
}

.anim-wobble:hover {
	animation : keyframes-wobble var(--duration) ease-in-out infinite;
}

.anim-squish {
	--squish-amount : 1.1;
	--duration : 0.05s;
	transition : transform var(--duration);
	transition-timing-function : ease-out;
}

.anim-squish:active {
	transform : scale(var(--squish-amount), calc(1 / var(--squish-amount)));
}

.anim-3d {
	--angle-x : 25deg;
	--angle-y : 0deg;
	--angle-z : 0deg;
	--focal-dist : 50em;
	--duration : 0.25s;
	transition : transform var(--duration);
}

.anim-3d:active {
	transform : perspective(var(--focal-dist)) rotateX(var(--angle-x)) rotateY(var(--angle-y)) rotateZ(var(--angle-z));
}

.sidebar {
	position : fixed;
	left : 2vw;
	width : calc(var(--margin-left) - 4vw);
}

#homepage {
	bottom : 2vh;
	text-align : center;
}

#homepage > * > img {
	width : 200px;
	max-width : 100%;
}

#index {
	--padding : 2em;
	overflow : auto;
	overflow-x : hidden;
	height : calc(70vh - 2 * var(--padding));
	margin-top : var(--padding);
	font-size : 1em;
}

#index > .h2 {
	padding-left : 1em;
}

#index > .h3 {
	padding-left : 2em;
}

#index > .h4 {
	padding-left : 3em;
}

#index > .h5 {
	padding-left : 4em;
}

#index > .h6 {
	padding-left : 4em;
}

#header {
	padding-top : 100px;
}

#footer {
	padding : 50px 0px;
}

@media screen and (max-width : 11in) {
	:root {
		--margin-left : 5%;
	}

	.sidebar {
		position : static;
		width : auto;
		margin : 15px var(--margin-right) 0px var(--margin-left);
	}

	#index {
		height : auto;
	}

	#header {
		padding-top : 20px;
	}
}

#content {
	margin : 0px var(--margin-right) 0px var(--margin-left);
	height : 100%;
}

img {
	max-width : 100%;
	max-height : 100%;
}

img.avatar {
	opacity : var(--avatar-image-opacity);
}

img#bulb {
	width : 2.5em;
}

.centreing img, img.centreing {
	display : block;
	margin : 0 auto;
}

a {
	color : var(--colour-accent);
	/*font-family : var(--font-mono);*/
	/* font-weight : bold; */
	text-decoration : none;
	transition : color 0.25s;
	cursor : pointer;
}

a:hover {
	color : var(--colour-accent-strawberry);
	text-decoration : underline;
}

a[target=_blank]:hover {
	color : var(--colour-accent-gold);
}

a:active {
	transition: color 0.0s;
	color : var(--foreground);
}

:not(pre) > code {
	border-radius : 4px;
	background-color : var(--background-2);
	padding : 0 4px;
	/*border-bottom : 1px dashed var(--foreground);*/
}

:not(pre) > code,
.long-word {
	overflow-wrap : break-word;
}

code, code *, span.tex, div.tex {
	font-family : var(--font-mono);
}

.inline {
	display : inline-block;
}

.tex {
	white-space : pre;
}

.latex {
	fill : var(--foreground)
}

.justify > pre {
	/*padding-left : 0.1em;*/
	display : block;
	overflow-x : auto;
	border-radius : 4px;
	background-color : var(--background-2);
	padding : 0.5em;
	/*background : var(--background);*/
	/* border-left : 1px dashed var(--foreground); */
}

p.justify {
	text-align : justify;
}

.justify {
	margin-top : 10px;
	margin-bottom : 10px;
}

.justify > p {
	margin-top : 0px;
	margin-bottom : 0px;
	text-align : justify;
}

p {
	line-height : 1.5;
}

.justify > br {
	display : none;
}

.justify > br + p,
.justify > p + p {
	text-indent : 2em;
}

.justify > div.centre {
	display : block;
	margin-top : 10px;
	margin-left : auto;
	margin-right : auto;
}

.justify > div.centre > div {
	padding : 15px;
}

.justify > table {
	margin-left : auto;
	margin-right : auto;
}

table {
	border-collapse : collapse;
}

.justify td, .justify th {
	padding : 8px;
	border : 1px solid var(--background-2);
}

.justify tr:nth-child(even) {
	background-color : var(--background-2);
}

.justify th {
	padding-top : 12px;
	padding-bottom : 12px;
	text-align : center;
	font-weight : bold;
}

.flex {
	display : flex;
	align-items : center;
	flex-wrap : wrap;
}

.flex > div {
	flex-grow : 1;
}

.centre {
	text-align : center;
	vertical-align : middle;
}

.left {
	text-align : left;
}

.top {
	vertical-align : top;
}

.right {
	text-align : right;
}

.bottom {
	vertical-align : bottom;
}

.collapsible {
	margin-top : 1em;
}

input[type='checkbox'] {
	display : inline;
	position : absolute;
	visibility : hidden;
	/* display : none; */
}

input[type='checkbox'] + label {
	display : inline-block;
	width : 100%;
}

.collapsible > input[type='checkbox'] + label::before {
	content : '[+] ';
}

.collapsible > input:checked + label::before {
	content : '[-] ';
}

.collapsible-content {
	border-left : 2px dotted var(--foreground);
	padding-left : 1em;
	max-height : 0px;
	overflow : hidden;
}

.toggle:checked + label + .collapsible-content {
	max-height : 100%;
}

/* highlighting */

.hll {
	background-color : var(--background-2);
}

.err,
.k,
.o,
.gh,
.gs,
.gu,
.kd,
.kn,
.kp,
.kr,
.nc,
.nd,
.ne,
.nl,
.nn,
.nt,
.ow,
.vc {
	font-weight : bold;
}

.gh {
	text-decoration : underline;
}

.c
.cm,
.cp,
.c1,
.cs,
.ge {
	font-style : italic;
}

.k,
.o,
.gi,
.go,
.gp,
.kd,
.kn,
.kp,
.kr,
.kt,
.nl,
.nn,
.nv,
.ow,
.w,
.sh,
.vg,
.vi,
.vm,
.p,
.nf,
.nx {
	/* boring tokens, such as variable names */
	color : var(--foreground);
}

.m,
.s,
.no,
.mf,
.mh,
.mi,
.mo,
.sb,
.sc,
.sd,
.s2,
.si,
.sx,
.sr,
.s1,
.ss,
.sh,
.il,
.dl,
.kc {
	/* constants and values */
	color : var(--colour-accent);
}

.nb,
.nd,
.bp {
	/* built-in functions and variables */
	color : var(--colour-accent-gold);
}

.na,
.nt,
.ni,
.ne,
.nc,
.se,
.kt,
.vc,
.vm {
	/* any kind of special identifier, types and primitive types */
	color : var(--colour-accent-strawberry);
}

.c,
.cm,
.cp,
.c1,
.cs,
.w {
	/* ignored code */
	color : grey;
}

.err,
.gd,
.gr,
.gt {
	/* error code */
	color : var(--background-2);
	background : red;
}
